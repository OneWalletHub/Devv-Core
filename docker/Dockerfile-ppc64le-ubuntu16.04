FROM ppc64le/ubuntu:16.04

# System packages
RUN apt-get update && apt-get install -y \
    gdb \
    valgrind \
    unzip \
    git \
    emacs \
    htop \
    bash-completion \
    automake \
    libtool \
    pkg-config \
    g++ \
    wget \
    clang \
    aptitude \
    cmake \
    cmake-curses-gui \
    cmake-extras \
    extra-cmake-modules

# Bitcoin/devcash dependencies
RUN apt-get install -y \
    libdb-dev \
    libdb++-dev \
    libqt5gui5 \
    qtbase5-dev \
    libboost-all-dev \
    bsdmainutils \
    libssl-dev \
    libevent-dev

# Python3 and virtualenv
RUN apt-get install -y \
    python3 \
    python3-pip \
    libpng-dev \
    libpng++-dev \
    python3-crypto-dbg \
    python-crypto-doc \
    python-cryptography-doc \
    python3-cryptography-vectors \
    python-dbus-doc \
    python3-dbus-dbg \
    python-secretstorage-doc \
    python-setuptools-doc

# Package management (for Power Repos)
RUN apt-get install -y \
    software-properties-common

# Add POWER repo and import key
RUN apt-add-repository "deb http://public.dhe.ibm.com/software/server/POWER/Linux/xl-compiler/eval/ppc64le/ubuntu/ xenial main"
RUN wget -q http://public.dhe.ibm.com/software/server/POWER/Linux/xl-compiler/eval/ppc64le/ubuntu/public.gpg -O- | apt-key add -

# The package maintainer decided to put the version in the package name,
# so the package name changes with version updates. Awesome.
RUN apt-get install -y `apt-cache search libxlmass | awk '{print $1}'`

# Optimized linear algebra
RUN wget https://sourceforge.net/projects/math-atlas/files/Developer%20%28unstable%29/3.11.39/atlas3.11.39.tar.bz2/download --output-document=atlas3.11.39.tar.bz2

# Python3 virtualenvwrapper
RUN pip3 install --upgrade pip setuptools
RUN pip3 install virtualenvwrapper

# matplotlib numpy
RUN apt-get install -y \
    libfreetype6-dev \
    libjpeg-dev \
    libopenblas-dev

# Utilities
RUN apt-get install -y \
    netcat \
    net-tools \
    iputils-ping

RUN groupadd --gid 1002 dcrunner
RUN useradd -d /home/dcrunner --uid 1002 -m --gid 1002 dcrunner

USER dcrunner

COPY install_virtualenvwrapper.sh /tmp/
RUN /bin/bash -c "/tmp/install_virtualenvwrapper.sh"

RUN echo "" >> /home/dcrunner/.bashrc
RUN echo "export WORKON_HOME=/home/dcrunner/py_virtual_env" >> /home/dcrunner/.bashrc
RUN echo "export VIRTUALENVWRAPPER_PYTHON=`which python3`" >> /home/dcrunner/.bashrc
RUN echo "source /usr/local/bin/virtualenvwrapper.sh" >> /home/dcrunner/.bashrc
RUN echo "workon dc-dev" >> /home/dcrunner/.bashrc

# https://denibertovic.com/posts/handling-permissions-with-docker-volumes/
COPY entrypoint.sh /tmp/entrypoint.sh
ENTRYPOINT ["/tmp/entrypoint.sh"]
